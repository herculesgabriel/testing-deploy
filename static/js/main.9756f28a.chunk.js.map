{"version":3,"sources":["services/api_states.js","components/Info.js","components/Form.js","actions/index.js","App.js","store/index.js","index.js"],"names":["getStates","axios","create","baseURL","Info","Object","keys","this","props","length","userData","name","email","cpf","address","city","state","type","resume","job_title","description","className","Component","connect","reduceForm","Form","handleChange","bind","handleMouseEvent","handleSubmit","handleReset","fillStates","info","alert","valid","states","get","then","response","setState","data","catch","sigla","nome","target","value","id","toUpperCase","prevState","document","getElementById","querySelector","checked","saveForm","allValid","values","every","field","htmlFor","maxLength","required","onChange","map","key","rows","onMouseEnter","onClick","dispatch","App","INITIAL_STATE_FORM","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9756f28a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getStates = axios.create({\n  baseURL: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados'\n});\n\nexport default getStates;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Info extends Component {\n  render() {\n    if (Object.keys(this.props).length === 0) {\n      return (\n        <h1>Hello</h1>\n      );\n    }\n    // const {\n    //   name, email, cpf, address, city, state, type, resume, job_title, description\n    // } = this.props.result;\n\n    const {\n      name, email, cpf, address, city, state, type, resume, job_title, description\n    } = this.props.userData;\n\n    return (\n      <p className=\"result\">\n        {\n          `Meu nome é ${name} e eu trabalho como ${job_title}. ${resume}\n        Moro nessa cidade maravilhosa chamada ${city}, ${state}.\n        Meu endereço completo? Claro! É ${address}, ${type}.\n        Falando mais um pouco sobre meu antigo emprego, é o seguinte: ${description}\n        É isso! Se precisar falar comigo, pode me contatar nesse e-mail: ${email}.\n        \n        CPF: ${cpf}`\n        }\n      </p>\n    );\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  userData: state.reduceForm.userData,\n});\n\nexport default connect(mapStateToProps)(Info);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveForm } from '../actions';\n\nimport getStates from '../services/api_states';\nimport Info from './Info';\n\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMouseEvent = this.handleMouseEvent.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.fillStates = this.fillStates.bind(this);\n\n    this.state = {\n      info: {\n        name: '',\n        email: '',\n        cpf: '',\n        address: '',\n        city: '',\n        state: '',\n        type: '',\n        resume: '',\n        job_title: '',\n        description: '',\n      },\n      alert: true,\n      valid: false,\n      states: [],\n    };\n  };\n\n  componentDidMount() {\n    this.fillStates();\n  };\n\n  fillStates() {\n    getStates.get()\n      .then(response => this.setState({ states: response.data }))\n      .catch(() => this.setState({ states: [{ sigla: '', nome: 'Falha ao carregar estados' }] }));\n  };\n\n  handleChange({ target }) {\n    const { name } = target;\n    const value = target.name === 'type' ? target.id :\n      target.name === 'name' ? target.value.toUpperCase() : target.value;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      info: {\n        ...prevState.info,\n        [name]: value,\n      }\n    }));\n  };\n\n  handleMouseEvent() {\n    if (this.state.alert) {\n      alert('Preencha com cuidado esta informação.');\n      this.setState({ alert: false });\n    }\n  };\n\n  handleReset() {\n    this.setState((prevState) => ({\n      ...prevState,\n      info: {\n        name: '',\n        email: '',\n        cpf: '',\n        address: '',\n        city: '',\n        state: '',\n        type: '',\n        resume: '',\n        job_title: '',\n        description: '',\n      },\n      valid: false,\n    }), () => {\n      document.getElementById('state').value = '';\n      document.querySelector('[name=type]:checked').checked = false;\n    });\n  };\n\n  handleSubmit() {\n    const { saveForm } = this.props;\n    saveForm(this.state.info);\n\n    const values = Object.values(this.state.info);\n    const allValid = values.every(field => field.length > 0);\n\n    this.setState({ valid: allValid });\n  };\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <legend>Informações pessoais</legend>\n\n            <label htmlFor=\"name\">Nome:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" maxLength=\"40\" required\n              onChange={this.handleChange} value={this.state.info.name}\n            />\n\n            <div className=\"group\">\n              <label htmlFor=\"email\">Email:</label>\n              <input type=\"text\" id=\"email\" name=\"email\" maxLength=\"50\" required\n                onChange={this.handleChange} value={this.state.info.email}\n              />\n\n              <label htmlFor=\"cpf\">CPF:</label>\n              <input type=\"text\" id=\"cpf\" name=\"cpf\" maxLength=\"11\" required\n                onChange={this.handleChange} value={this.state.info.cpf}\n              />\n            </div>\n\n            <label htmlFor=\"address\">Endereço:</label>\n            <input type=\"text\" id=\"address\" name=\"address\" maxLength=\"200\" required\n              onChange={this.handleChange} value={this.state.info.address}\n            />\n            {/* // TODO Remover qualquer caractere especial que seja digitado */}\n\n            <div className=\"group\">\n              <label htmlFor=\"city\">Cidade:</label>\n              <input type=\"text\" id=\"city\" name=\"city\" maxLength=\"28\" required\n                onChange={this.handleChange} value={this.state.info.city}\n              />\n              {/* // TODO Ao remover o foco desse campo (evento onBlur), verificar se o nome da cidade começa com números. Caso comece, limpar o campo. */}\n\n              <label htmlFor=\"state\">Estado:</label>\n              <select name=\"state\" id=\"state\" required onChange={this.handleChange}>\n                <option value=\"\">Selecione um estado</option>\n                {\n                  this.state.states.length > 0 && this.state.states.map((state) =>\n                    <option key={state.sigla} value={`${state.sigla}`}>{state.nome}</option>)\n                }\n              </select>\n            </div>\n\n            <label>Tipo:</label>\n\n            <div className=\"group\">\n              <label htmlFor=\"house\">\n                <input type=\"radio\" name=\"type\" id=\"house\" onChange={this.handleChange} required /> Casa </label>\n              <label htmlFor=\"apartment\">\n                <input type=\"radio\" name=\"type\" id=\"apartment\" onChange={this.handleChange} /> Apartamento </label>\n            </div>\n\n          </fieldset>\n\n          <fieldset>\n            <legend>Informações sobre o último emprego</legend>\n\n            <label htmlFor=\"resume\">Resumo do currículo:</label>\n            <textarea name=\"resume\" id=\"resume\" rows=\"8\" maxLength=\"1000\" required\n              onChange={this.handleChange} value={this.state.info.resume}\n            />\n\n            <label htmlFor=\"job_title\">Cargo:</label>\n            <textarea name=\"job_title\" id=\"job_title\" rows=\"2\" maxLength=\"40\" required\n              onChange={this.handleChange} value={this.state.info.job_title} onMouseEnter={this.handleMouseEvent}\n            />\n\n            <label htmlFor=\"description\">Descrição do cargo:</label>\n            <textarea name=\"description\" id=\"description\" rows=\"4\" maxLength=\"500\" required\n              onChange={this.handleChange} value={this.state.info.description}\n            />\n\n          </fieldset>\n\n          <button type=\"button\" onClick={this.handleReset}>\n            Limpar\n            </button>\n          <button type=\"button\" onClick={this.handleSubmit}>\n            Cadastrar\n            </button>\n\n        </form>\n\n        {\n          // this.state.valid ? <Info result={this.state.info} /> : <Info />\n          this.state.valid && <Info />\n        }\n      </>\n    );\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveForm: (data) => dispatch(saveForm(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","export const SAVE_FORM = 'SAVE_FORM';\n\nexport const saveForm = data => ({ type: SAVE_FORM, data });\n","import React from 'react';\nimport Form from './components/Form';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\nimport { SAVE_FORM } from '../actions';\n\nconst INITIAL_STATE_FORM = {\n  userData: {\n    name: '',\n    email: '',\n    cpf: '',\n    address: '',\n    city: '',\n    state: '',\n    type: '',\n    resume: '',\n    job_title: '',\n    description: '',\n  }\n};\n\nconst reduceForm = (state = INITIAL_STATE_FORM, action) => {\n  switch (action.type) {\n    case SAVE_FORM:\n      return {\n        userData: { ...state.userData, ...action.data },\n      };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({ reduceForm });\n\nconst store = createStore(\n  rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}